<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- Service beans -->
    <bean class="ru.rap.services.UserService" id="userService"/>
    <bean class="ru.rap.services.RiddleService" id="riddleService"/>
    <bean class="ru.rap.services.AnswerService" id="answerService"/>

    <!-- Policies beans -->
    <bean class="ru.rap.policies.RapUserDetailsService" id="userDetailService"/>
    <bean class="ru.rap.policies.RapPasswordEncoder" id="passwordEncoder"/>

    <!-- Validators -->
    <bean class="ru.rap.common.validators.UsernameValidator" id="usernameValidator"/>
    <bean class="ru.rap.common.validators.PasswordValidator" id="passwordValidator"/>

    <!-- Context scan -->
    <context:component-scan base-package="ru.rap.controllers"/>
    <context:component-scan base-package="ru.rap.policies"/>
    <context:component-scan base-package="ru.rap.repositories"/>
    <context:component-scan base-package="ru.rap.services"/>

    <!-- @Transaction annotation support -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Обеспечивает работу с транзакциями в Spring -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf"/>
    </bean>

    <!-- EntityManagerFactory -->
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <!-- поиск сущностей в этом пакете -->
        <property name="packagesToScan" value="ru.rap.entities"/>

        <!-- Поставщик данных - hibernate -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>

        <property name="persistenceUnitName" value="publishing"/>

        <property name="jpaProperties">
            <props>
                <prop key="javax.persistence.validation.mode">none</prop>
                <prop key="current_session_context_class">thread</prop>
                <prop key="hibernate.archive.autodetection">class,hbm</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
                <prop key="hibernate.connection.pool_size">1</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>

                <!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>-->
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <!--<prop key="hibernate.cache.use_structured_entries">true</prop>-->
            </props>
        </property>
    </bean>

    <!-- Datasource -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/rap?useUnicode=true&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&amp;useSSL=false&amp;characterEncoding=UTF-8"/>
        <property name="username" value="test"/>
        <property name="password" value="123"/>
        <property name="initialSize" value="10"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="minIdle" value="89"/>
        <property name="maxIdle" value="233"/>
        <property name="maxTotal" value="30"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testWhileIdle" value="true"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="timeBetweenEvictionRunsMillis" value="35000"/>
        <property name="minEvictableIdleTimeMillis" value="55000"/>
        <property name="removeAbandonedTimeout" value="3600"/>
        <property name="logAbandoned" value="true"/>
    </bean>

    <!--Activates various annotations to be detected in bean classes: Spring's @Required and @Autowired and so on-->
    <context:annotation-config/>

    <!--Scanning components in base-package (look for annotations) -->
    <context:component-scan base-package="ru.rap"/>

    <!-- Need for Repository abstraction -->
    <jpa:repositories base-package="ru.rap.repositories"
                      entity-manager-factory-ref="emf"
                      transaction-manager-ref="transactionManager"/>
</beans>