<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <http auto-config="true">
        <intercept-url pattern="/riddles**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>
        <form-login
                login-page="/"
                default-target-url="/riddles"
                login-processing-url="/j_spring_security_check"
                authentication-failure-url="/?error"
                username-parameter="authName"
                password-parameter="authPwd"/>
        <logout logout-success-url="/?logout"
                logout-url="/j_spring_security_logout"/>
        <csrf disabled="true"/>
    </http>

    <!-- basic-auth -->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailService">
            <!--<user-service>
                <user name="user" password="user" authorities="ROLE_USER"/>
                <user name="admin" password="admin" authorities="ROLE_ADMIN"/>
            </user-service>-->
            <!--<jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query=
                            "SELECT name, hashPassword
                             FROM `user`
                             WHERE name = ?"
                    authorities-by-username-query=
                            "SELECT u.name, r2u.role
                             FROM `user` u
                             JOIN `role2user` r2u ON r2u.user_id = u.id
                             WHERE u.name = ?"/>-->
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!-- Dao beans -->
    <beans:bean class="ru.rap.dao.UserDao" id="userDao"/>
    <beans:bean class="ru.rap.dao.RiddleDao" id="riddleDao"/>

    <!-- Service beans -->
    <beans:bean class="ru.rap.services.UserService" id="userService"/>
    <beans:bean class="ru.rap.services.RiddleService" id="riddleService"/>
    <beans:bean class="ru.rap.services.AnswerService" id="answerService"/>

    <!-- Policies beans -->
    <beans:bean class="ru.rap.policies.RapUserDetailsService" id="userDetailService"/>
    <beans:bean class="ru.rap.policies.RapPasswordEncoder" id="passwordEncoder"/>

    <context:component-scan base-package="ru.rap.dao"/>
    <context:component-scan base-package="ru.rap.services"/>
    <context:component-scan base-package="ru.rap.controllers"/>
    <context:component-scan base-package="ru.rap.policies"/>

</beans:beans>